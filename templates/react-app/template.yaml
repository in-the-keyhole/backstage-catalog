apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: react-app-template
  title: React Application
  description: Create a new React application
  tags:
    - react
    - cra
spec:
  owner: keyhole-developers
  type: website
  parameters:
    - title: Provide some simple information
      required:
        - component_id
        # - system
        - lifecycle
        - owner
        # - type
      properties:
        component_id:
          title: Name
          type: string
          pattern: "^([a-z0-9\\-]+)$"
          description: Unique name of the component
          ui:field: EntityNamePicker
          ui:autofocus: true
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        # system:
        #   title: System
        #   type: string
        #   description: System of the component
        #   ui:field: EntityPicker
        #   ui:options:
        #     allowedKinds:
        #       - System
        #     defaultKind: System
        lifecycle:
          title: Lifecycle
          description: 'Application lifecycle'
          type: string
          default: experimental
          enum:
            - deprecated
            - experimental
            - production
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - in-the-keyhole

  steps:
    - id: template
      name: Fetch React Template
      action: fetch:template
      input:
        url: ./content
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          env: dev

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: ${{ parameters.description }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        repoVisibility: public
        gitCommitMessage: ":robot: First Commit"
        protectDefaultBranch: false

    - id: template
      name: Fetch Github Workflow(s)
      action: fetch:plain
      input:
        url: ./workflow

    - id: workflow-pr
      name: "Open PR for Github Workflow(s)"
      action: publish:github:pull-request
      input:
        repoUrl: ${{ parameters.repoUrl }}
        branchName: add-workflow-${{ parameters.component_id }}
        title: ':robot: [backstage-bot] Create workflow'
        description: |
          # Adds Github Action Workflow -- merge after infrastructure provisioning is complete

    - id: fetch-crossplane-templates
      name: Fetch Crossplane Templates
      action: fetch:template
      input:
        targetPath: ./crossplane
        url: https://github.com/in-the-keyhole/backstage-catalog/tree/main/skeleton/crossplane/cloudfront
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          env: dev

    - id: gitops-pr
      name: "Open PR for Crossplane resources in GitOps Repository"
      action: publish:github:pull-request
      input:
        repoUrl: github.com?repo=keyhole-gitops&owner=in-the-keyhole
        branchName: create-${{ parameters.component_id }}
        title: ':robot: [backstage-bot] Create infrastructure for new app: ${{ parameters.component_id }}'
        description: |
          # New project: ${{ parameters.component_id }}
          ${{ parameters.description if parameters.description }}
        sourcePath: crossplane
        targetPath: apps

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}